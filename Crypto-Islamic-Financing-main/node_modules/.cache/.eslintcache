[{"/Users/453543/port/wallet-adapter/packages/material-ui-starter/src/index.tsx":"1","/Users/453543/port/wallet-adapter/packages/material-ui-starter/src/reportWebVitals.ts":"2","/Users/453543/port/wallet-adapter/packages/material-ui-starter/src/App.tsx":"3","/Users/453543/port/wallet-adapter/packages/material-ui-starter/src/Wallet.tsx":"4","/Users/453543/port/wallet-adapter/packages/material-ui-starter/src/Navigation.tsx":"5","/Users/453543/Crypto-Islamic-Financing-main/src/index.tsx":"6","/Users/453543/Crypto-Islamic-Financing-main/src/reportWebVitals.ts":"7","/Users/453543/Crypto-Islamic-Financing-main/src/App.tsx":"8","/Users/453543/Crypto-Islamic-Financing-main/src/Wallet.tsx":"9","/Users/453543/Crypto-Islamic-Financing-main/src/Navigation.tsx":"10","/Users/453543/Crypto-Islamic-Financing-main/src/pages/Dashboard.js":"11","/Users/453543/Crypto-Islamic-Financing-main/src/components/Layout.tsx":"12"},{"size":510,"mtime":1631876791026,"results":"13","hashOfConfig":"14"},{"size":467,"mtime":1631876791027,"results":"15","hashOfConfig":"14"},{"size":1044,"mtime":1632070662543,"results":"16","hashOfConfig":"14"},{"size":1764,"mtime":1631876791025,"results":"17","hashOfConfig":"14"},{"size":1063,"mtime":1632070850230,"results":"18","hashOfConfig":"14"},{"size":510,"mtime":1632614917529,"results":"19","hashOfConfig":"20"},{"size":467,"mtime":1632614917533,"results":"21","hashOfConfig":"20"},{"size":1344,"mtime":1632615056246,"results":"22","hashOfConfig":"20"},{"size":1764,"mtime":1632614917526,"results":"23","hashOfConfig":"20"},{"size":1132,"mtime":1632615070321,"results":"24","hashOfConfig":"20"},{"size":141,"mtime":1632614917531,"results":"25","hashOfConfig":"20"},{"size":2620,"mtime":1632615089312,"results":"26","hashOfConfig":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"72c1so",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k5sezl",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/Users/453543/port/wallet-adapter/packages/material-ui-starter/src/index.tsx",[],"/Users/453543/port/wallet-adapter/packages/material-ui-starter/src/reportWebVitals.ts",[],"/Users/453543/port/wallet-adapter/packages/material-ui-starter/src/App.tsx",[],"/Users/453543/port/wallet-adapter/packages/material-ui-starter/src/Wallet.tsx",[],"/Users/453543/port/wallet-adapter/packages/material-ui-starter/src/Navigation.tsx",["54"],"/Users/453543/Crypto-Islamic-Financing-main/src/index.tsx",[],"/Users/453543/Crypto-Islamic-Financing-main/src/reportWebVitals.ts",[],"/Users/453543/Crypto-Islamic-Financing-main/src/App.tsx",["55"],"import { createTheme, ThemeProvider } from '@material-ui/core';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { SnackbarProvider } from 'notistack';\nimport React, { FC } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport Layout from './components/Layout';\nimport Dashboard from './pages/Dashboard';\n\nimport Wallet from './Wallet';\n\nconst theme = createTheme({\n    palette: {\n      primary: {\n        main: '#fefefe'\n      },\n      secondary: {main: '#6859FF'} \n    },\n    typography: {\n      fontFamily: 'Quicksand',\n      fontWeightLight: 400,\n      fontWeightRegular: 500,\n      fontWeightMedium: 600,\n      fontWeightBold: 700,\n    }\n  })\nconst App: FC = () => {\n  \n\n\n     return (\n        <ThemeProvider theme={theme}>\n            <Router>\n                <Layout>\n                    <Switch>\n                       <Route exact path=\"/\">\n                        <SnackbarProvider>\n                            <Wallet />\n\n                        </SnackbarProvider>\n                        </Route>\n                        <Route path=\"/dashboard\">\n                          <Dashboard />  \n                        </Route>\n                    </Switch>\n                </Layout>\n            </Router>\n\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","/Users/453543/Crypto-Islamic-Financing-main/src/Wallet.tsx",[],"/Users/453543/Crypto-Islamic-Financing-main/src/Navigation.tsx",["56"],"import { Toolbar, Typography } from '@material-ui/core';\nimport DisconnectIcon from '@material-ui/icons/LinkOff';\nimport Button from '@mui/material/Button';\nimport { WalletDisconnectButton, WalletMultiButton } from '@solana/wallet-adapter-material-ui';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { FC } from 'react';\nimport NetworkCheckIcon from '@mui/icons-material/NetworkCheck';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\n\nconst Navigation: FC = () => {\n    const { wallet } = useWallet();\n\n    return (\n    <Box sx={{ flexGrow: 2 }}>\n      <AppBar position=\"absolute\" color=\"inherit\" >\n        <Toolbar>\n            <Typography component=\"h1\" variant=\"h6\" color=\"secondary\" style={{ flexGrow: 1}}>\n                CashMe JODC \n            </Typography>\n\n            <WalletMultiButton/>\n            {wallet && <WalletDisconnectButton startIcon={<DisconnectIcon />}/>}\n        \n        <Button\n        variant=\"contained\" color=\"success\">\n        Network \n      </Button>\n\n        </Toolbar>\n        </AppBar>\n        </Box>\n    );\n};\n\nexport default Navigation;\n","/Users/453543/Crypto-Islamic-Financing-main/src/pages/Dashboard.js",[],"/Users/453543/Crypto-Islamic-Financing-main/src/components/Layout.tsx",["57"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport Drawer from '@material-ui/core/Drawer'\nimport Typography from '@material-ui/core/Typography'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    page: {\n      background: '#f9f9f9',\n      width: '100%',\n      padding: theme.spacing(1),\n    },\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    active: {\n      background: '#f4f4f4'\n    },\n    title: {\n      padding: theme.spacing(2),\n    },\n  }\n})\n\nexport default function Layout({ children }) {\n  const classes = useStyles()\n  const history = useHistory()\n  const location = useLocation()\n\n  const menuItems = [\n    { \n      text: 'Market', \n      icon: <SubjectOutlined color=\"secondary\" />, \n      path: '/' \n    },\n    { \n      text: 'Dashboard', \n      icon: <AddCircleOutlineOutlined color=\"secondary\" />, \n      path: '/Dashboard' \n    },\n    { \n        text: 'Supply', \n        icon: <AddCircleOutlineOutlined color=\"secondary\" />, \n        path: '/Supply' \n      },\n      { \n        text: 'Borrow', \n        icon: <AddCircleOutlineOutlined color=\"secondary\" />, \n        path: '/Borrow' \n      },\n  ];\n\n  return (\n    <div className={classes.root}>\n      {/* app bar */}\n\n      {/* side drawer */}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: classes.drawerPaper }}\n        anchor=\"left\"\n      >\n        <div>\n          <Typography variant=\"h5\" className={classes.title}>\n           JODT\n          </Typography>\n        </div>\n\n        {/* links/list section */}\n        <List>\n          {menuItems.map((item) => (\n            <ListItem \n              button \n              key={item.text} \n              onClick={() => history.push(item.path)}\n              className={location.pathname == item.path ? classes.active : \"classes.root\"}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n        \n      </Drawer>\n\n      {/* main content */}\n      <div className={classes.page}>\n        { children }\n      </div>\n    </div>\n  )\n}\n",{"ruleId":"58","severity":1,"message":"59","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":24},{"ruleId":"58","severity":1,"message":"62","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":91,"column":44,"nodeType":"65","messageId":"66","endLine":91,"endColumn":46},"@typescript-eslint/no-unused-vars","'NetworkCheckIcon' is defined but never used.","Identifier","unusedVar","'deepPurple' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]