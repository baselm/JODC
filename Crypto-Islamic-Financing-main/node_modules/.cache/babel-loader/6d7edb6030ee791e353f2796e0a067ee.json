{"ast":null,"code":"import{WalletDialogProvider}from'@solana/wallet-adapter-material-ui';import{WalletProvider}from'@solana/wallet-adapter-react';import{getLedgerWallet,getMathWallet,getPhantomWallet,getSolflareWallet,getSolletWallet,getSolongWallet,getTorusWallet}from'@solana/wallet-adapter-wallets';import{useSnackbar}from'notistack';import React,{useCallback,useMemo}from'react';import Navigation from'./Navigation';import{jsx as _jsx}from\"react/jsx-runtime\";var Wallet=function Wallet(){// @solana/wallet-adapter-wallets imports all the adapters but supports tree shaking --\n// Only the wallets you want to support will be compiled into your application\nvar wallets=useMemo(function(){return[getPhantomWallet(),getSolflareWallet(),getTorusWallet({options:{clientId:'BOM5Cl7PXgE9Ylq1Z1tqzhpydY0RVr8k90QQ85N7AKI5QGSrr9iDC-3rvmy0K_hF0JfpLMiXoDhta68JwcxS1LQ'}}),getLedgerWallet(),getSolongWallet(),getMathWallet(),getSolletWallet()];},[]);var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var onError=useCallback(function(error){enqueueSnackbar(error.message?\"\".concat(error.name,\": \").concat(error.message):error.name,{variant:'error'});console.error(error);},[enqueueSnackbar]);return/*#__PURE__*/_jsx(WalletProvider,{wallets:wallets,onError:onError,autoConnect:true,children:/*#__PURE__*/_jsx(WalletDialogProvider,{children:/*#__PURE__*/_jsx(Navigation,{})})});};export default Wallet;","map":{"version":3,"sources":["/Users/453543/Crypto-Islamic-Financing-main/src/Wallet.tsx"],"names":["WalletDialogProvider","WalletProvider","getLedgerWallet","getMathWallet","getPhantomWallet","getSolflareWallet","getSolletWallet","getSolongWallet","getTorusWallet","useSnackbar","React","useCallback","useMemo","Navigation","Wallet","wallets","options","clientId","enqueueSnackbar","onError","error","message","name","variant","console"],"mappings":"AACA,OAASA,oBAAT,KAAqC,oCAArC,CACA,OAASC,cAAT,KAA+B,8BAA/B,CACA,OACIC,eADJ,CAEIC,aAFJ,CAGIC,gBAHJ,CAIIC,iBAJJ,CAKIC,eALJ,CAMIC,eANJ,CAOIC,cAPJ,KAQO,gCARP,CASA,OAASC,WAAT,KAA4B,WAA5B,CACA,MAAOC,CAAAA,KAAP,EAAoBC,WAApB,CAAiCC,OAAjC,KAAgD,OAAhD,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,2CAEA,GAAMC,CAAAA,MAAU,CAAG,QAAbA,CAAAA,MAAa,EAAM,CACrB;AACA;AACA,GAAMC,CAAAA,OAAO,CAAGH,OAAO,CACnB,iBAAM,CACFR,gBAAgB,EADd,CAEFC,iBAAiB,EAFf,CAGFG,cAAc,CAAC,CACXQ,OAAO,CAAE,CACLC,QAAQ,CAAE,yFADL,CADE,CAAD,CAHZ,CAQFf,eAAe,EARb,CASFK,eAAe,EATb,CAUFJ,aAAa,EAVX,CAWFG,eAAe,EAXb,CAAN,EADmB,CAcnB,EAdmB,CAAvB,CAiBA,iBAA4BG,WAAW,EAAvC,CAAQS,eAAR,cAAQA,eAAR,CACA,GAAMC,CAAAA,OAAO,CAAGR,WAAW,CACvB,SAACS,KAAD,CAAwB,CACpBF,eAAe,CAACE,KAAK,CAACC,OAAN,WAAmBD,KAAK,CAACE,IAAzB,cAAkCF,KAAK,CAACC,OAAxC,EAAoDD,KAAK,CAACE,IAA3D,CAAiE,CAAEC,OAAO,CAAE,OAAX,CAAjE,CAAf,CACAC,OAAO,CAACJ,KAAR,CAAcA,KAAd,EACH,CAJsB,CAKvB,CAACF,eAAD,CALuB,CAA3B,CAQA,mBACI,KAAC,cAAD,EAAgB,OAAO,CAAEH,OAAzB,CAAkC,OAAO,CAAEI,OAA3C,CAAoD,WAAW,KAA/D,uBACI,KAAC,oBAAD,wBACI,KAAC,UAAD,IADJ,EADJ,EADJ,CAOH,CApCD,CAsCA,cAAeL,CAAAA,MAAf","sourcesContent":["import { WalletError } from '@solana/wallet-adapter-base';\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\nimport { WalletProvider } from '@solana/wallet-adapter-react';\nimport {\n    getLedgerWallet,\n    getMathWallet,\n    getPhantomWallet,\n    getSolflareWallet,\n    getSolletWallet,\n    getSolongWallet,\n    getTorusWallet,\n} from '@solana/wallet-adapter-wallets';\nimport { useSnackbar } from 'notistack';\nimport React, { FC, useCallback, useMemo } from 'react';\nimport Navigation from './Navigation';\n\nconst Wallet: FC = () => {\n    // @solana/wallet-adapter-wallets imports all the adapters but supports tree shaking --\n    // Only the wallets you want to support will be compiled into your application\n    const wallets = useMemo(\n        () => [\n            getPhantomWallet(),\n            getSolflareWallet(),\n            getTorusWallet({\n                options: {\n                    clientId: 'BOM5Cl7PXgE9Ylq1Z1tqzhpydY0RVr8k90QQ85N7AKI5QGSrr9iDC-3rvmy0K_hF0JfpLMiXoDhta68JwcxS1LQ',\n                },\n            }),\n            getLedgerWallet(),\n            getSolongWallet(),\n            getMathWallet(),\n            getSolletWallet(),\n        ],\n        []\n    );\n\n    const { enqueueSnackbar } = useSnackbar();\n    const onError = useCallback(\n        (error: WalletError) => {\n            enqueueSnackbar(error.message ? `${error.name}: ${error.message}` : error.name, { variant: 'error' });\n            console.error(error);\n        },\n        [enqueueSnackbar]\n    );\n\n    return (\n        <WalletProvider wallets={wallets} onError={onError} autoConnect>\n            <WalletDialogProvider>\n                <Navigation />\n            </WalletDialogProvider>\n        </WalletProvider>\n    );\n};\n\nexport default Wallet;\n"]},"metadata":{},"sourceType":"module"}